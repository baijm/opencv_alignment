%YAML:1.0
---
# 保存选项
# -- 保存在彩色图像上画出读入的全部匹配和RANSAC后inliers的结果
save_match: 0
# -- 保存对齐后未裁剪的结果
save_align: 0
# -- 保存对齐且裁剪后的结果(有效区域)
save_valid_crop: 1
# -- 保存对齐且裁剪后的结果(logo区域)
save_logo_crop: 1
# -- 保存把模板图像有效区域变换到测试图像产生的候选包围盒坐标,该测试图像中所有候选包围盒画在图像上的结果(用于与后续步骤对接,请勿修改)
save_valid_box: 1
# -- 保存把模板图像logo区域变换到测试图像产生的候选包围盒坐标,该测试图像中所有候选包围盒画在图像上的结果(用于与后续步骤对接,请勿修改)
save_logo_box: 1
# 结果目录
# -- 保存在彩色图像上画出读入的全部匹配和RANSAC后inliers的结果
res_match_dir: ""
# -- 保存对齐后未裁剪的结果
res_align_dir: ""
# -- 保存对齐且裁剪后的结果(有效区域)
res_valid_crop_dir: "D:/datasets/product_logo/GP-20/crop_valid/1013/valid/crop"
# -- 保存对齐且裁剪后的结果(logo区域)
res_logo_crop_dir: "D:/datasets/product_logo/GP-20/crop_valid/1013/logo/crop"
# -- 保存把模板图像有效区域变换到测试图像产生的候选包围盒坐标,该测试图像中所有候选包围盒画在图像上的结果
res_valid_box_dir: "D:/datasets/product_logo/GP-20/crop_valid/1013/valid/box"
# -- 保存把模板图像logo区域变换到测试图像产生的候选包围盒坐标,该测试图像中所有候选包围盒画在图像上的结果
res_logo_box_dir: "D:/datasets/product_logo/GP-20/crop_valid/1013/logo/box"
# 测试图像相关
# -- 测试图像目录,其中测试图像扩展名为.jpg
test_im_dir: "D:/datasets/product_logo/GP-20/Testing/images"
# -- 测试图像名列表文件,其中每一行是一幅测试图像名,无扩展名
test_name_file: "D:/datasets/product_logo/GP-20/Testing/img_names.txt"
# -- 测试图像recurrent pattern特征匹配结果目录
test_rp_match_dir: "D:/datasets/product_logo/GP-20/match_list/1010"
# 模板图像相关
# -- 模板图像目录,其中模板图像扩展名为.jpg
tmpl_im_dir: "D:/datasets/product_logo/GP-20/templet/img"
# -- 模板图像名列表文件,其中每一行是一幅模板图像名,无扩展名
tmpl_name_file: "D:/datasets/product_logo/GP-20/templet/img_names.txt"
# -- 模板图像有效区域坐标目录,其中每个模板图像一个txt文件,文件中只有一行,依次为xmin,xmax,ymin,ymax,用空格分隔
tmpl_valid_dir: "D:/datasets/product_logo/GP-20/templet/valid/coords"
# -- 模板图像logo区域坐标目录,其中每个模板图像一个txt文件,文件中只有一行,依次为xmin,xmax,ymin,ymax,用空格分隔
tmpl_logo_dir: "D:/datasets/product_logo/GP-20/templet/logo/1010/coords"
# 编号与筛选选项
# -- 变换后的logo区域重叠大于阈值时, 认为对应同一个商品
logo_overlap_thres: 0.5
# -- 如果变换后有效区域的宽高比与1的关系和之前不一样则忽略
filter_h2w: 0
# -- 一个商品与所有模板对齐产生的包围盒综合成一个所用方法(mean - 取平均, median - 取中值, none - 不综合)
summarize_box: "none"